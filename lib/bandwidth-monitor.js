// Generated by LiveScript 1.3.1
var average, FIFO;
average = require('prelude-ls').average;
FIFO = (function(){
  FIFO.displayName = 'FIFO';
  var prototype = FIFO.prototype, constructor = FIFO;
  function FIFO(size){
    this.size = size;
    this.values = [];
  }
  prototype.push = function(item){
    this.values.push(item);
    if (this.values.length > this.size) {
      this.values.unshift();
    }
    return item;
  };
  return FIFO;
}());
module.exports = function(total){
  return new function(){
    var recompute, progressInterval, this$ = this;
    this.total = total;
    this.chunkSizeSamples = new FIFO(10);
    this.downloaded = this.previousDownloaded = this.speed = 0;
    recompute = function(){
      this$.chunkSizeSamples.push(this$.downloaded - this$.previousDownloaded);
      this$.speed = average(this$.chunkSizeSamples.values);
      return this$.previousDownloaded = this$.downloaded;
    };
    progressInterval = setInterval(recompute, 1000);
    this.tick = function(count){
      return this.downloaded += count;
    };
    this.stop = function(){
      return clearInterval(progressInterval);
    };
  };
};